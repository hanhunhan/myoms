<?php

class FlowAction extends ExtendAction {
    public function __construct() {
        parent::__construct(); // TODO: Change the autogenerated stub
    }

    function workFlow() {//流程管理
        if ($_REQUEST['BUSINESSTYPEID']) {
            $_REQUEST['search5'] = 'BUSINESSTYPE';
            $_REQUEST['search5_s'] = '3';
            $_REQUEST['search5_t'] = $_REQUEST['BUSINESSTYPEID'];
        }
        Vendor('Oms.Form');
        $form = new Form();
        $form->CZBTN = '<a class="contrtable-link" onclick="viewVersion(this);"  href="javascript:void(0);">查看版本</a>
			<a class="contrtable-link" onclick="editFlow(this);"   href="javascript:void(0);">编辑</a>';
        $form->GCBTN = '<a id="j-sequence" class="j-showalert" href="javascript:;">排序</a><a id="j-search" class="j-showalert" href="javascript:;">搜索</a><a class="j-refresh" onclick="window.location.reload();" href="javascript:;">刷新</a><a href="/tpp/adminpack/index.php?s=/Flow/FlowSet/&showForm=1&BUSINESSTYPEID=' . $_REQUEST['BUSINESSTYPEID'] . '">新增流程</a>';
        $form->ADDABLE = 0;
        $form = $form->initForminfo(56)->getResult();
        $this->assign('form', $form);
        $this->display('flow_m');
    }

    function FlowSet() {
        $_REQUEST['ID'] = $FlowId = $_REQUEST['FlowId'] ? $_REQUEST['FlowId'] : $_REQUEST['ID'];
        $VersionId = $_REQUEST['VersionId'] ? $_REQUEST['VersionId'] : '';
        $CityId = $_REQUEST['CityId'] ? $_REQUEST['CityId'] : '';
        $FlowNodeId = $_REQUEST['FlowNodeId'] ? $_REQUEST['FlowNodeId'] : '';
        Vendor('Oms.Form');
        $form = new Form();
        $paramUrl = "&showForm=1&FlowId=" . $FlowId . "&VersionId=" . $VersionId . "&CityId=" . $CityId . "&FlowNodeId=" . $FlowNodeId;
        $form->FORMFORWARD = U('Flow/FlowVersonSet', $paramUrl);

        $form = $form->initForminfo(56)->setMyFieldVal('BUSINESSTYPE', $_REQUEST['BUSINESSTYPEID'], true)->getResult();

        $this->assign('form', $form);
        $this->assign('paramUrl', $paramUrl);
        $this->display('newflow1');
    }

    function ajaxcheckbstype() {//业务类型验证
        $ress = D('businesstype')->where("PARENTID='" . $_REQUEST['param'] . "'")->select();
        if ($ress) {
            $result['status'] = 'n';
            $result['info'] = iconv("GB2312//IGNORE", "UTF-8", '请选择无子类选项');
        } else {
            $result['status'] = 'y';
            $result['info'] = '';

        }
        echo json_encode($result);
    }

    function FlowVersonSet() {
        if ($_REQUEST['faction'] == 'lock') {
            $ID = $_REQUEST['ID'];
            $update['STATUS'] = $_REQUEST['fstatus'] == -1 ? 2 : -1;
            $affected = D('flowversion')->where("ID='$ID' ")->save($update);
            if ($affected) {
                $res['status'] = $update['STATUS'] == -1 ? 'unlock' : 'lock';
            } else $res['status'] = 'error';
            exit(json_encode($res));
        }
        $FlowId = $_REQUEST['FlowId'] ? $_REQUEST['FlowId'] : $_REQUEST['paramId'];
        $CityId = $_REQUEST['CityId'] ? $_REQUEST['CityId'] : '';
        $FlowNodeId = $_REQUEST['FlowNodeId'] ? $_REQUEST['FlowNodeId'] : '';
        if ($_REQUEST['add'] == 1) {
            $_REQUEST['ID'] = null;
            $paramUrl = "&showForm=1&FlowId=$FlowId&VersionId=$VersionId&CityId=$CityId&FlowNodeId=$FlowNodeId";
            $forward = U('Flow/FlowVersonSet', $paramUrl);
        } else {
            $_REQUEST['ID'] = $VersionId = $_REQUEST['ID'] ? $_REQUEST['ID'] : $_REQUEST['VersionId'];
            $paramUrl = "&showForm=1&FlowId=$FlowId&VersionId=$VersionId&CityId=$CityId&FlowNodeId=$FlowNodeId";
            $forward = U('Flow/FlowCitySet', $paramUrl);
        }

        if (empty($FlowId)) exit("<script>alert('请先保存流程信息！');self.location=document.referrer;</script>");
        $_REQUEST['search5'] = 'FLOWID';
        $_REQUEST['search5_s'] = '3';
        $_REQUEST['search5_t'] = $FlowId;
        Vendor('Oms.Form');
        $form = new Form();

        $form->FORMFORWARD = $forward;
        $form = $form->initForminfo(57)->setMyFieldVal('FLOWID', $FlowId, true)->getResult();

        $this->assign('form', $form);

        $form2 = new Form();
        $form2->CZBTN = '<a class="contrtable-link" onclick="viewFlowNode(this);"  href="javascript:void(0);">查看流程</a>
			<a class="contrtable-link" onclick="editFlowVersion(this);"   href="javascript:void(0);">编辑</a> <a class="contrtable-link flock" onclick="lockFlowVersion(this);"   href="javascript:void(0);">状态锁定</a><a class="contrtable-link " onclick="FlowForm(this);"   href="javascript:void(0);">界面设置</a>';
        $form2->GCBTN = '<a id="j-sequence" class="j-showalert" href="javascript:;">排序</a>
			<a id="j-search" class="j-showalert" href="javascript:;">搜索</a>
			<a class="j-refresh" onclick="window.location.reload();" href="javascript:;">刷新</a>
			<a href="' . __SELF__ . '&add=1">新增版本</a>';
        $form2->ADDABLE = 0;
        $form2 = $form2->initForminfo(57)->getGridHtml();
        $this->assign('form2', $form2);

        $this->assign('paramUrl', $paramUrl);
        $this->display('newflow2');
    }

    function FlowCitySet() {
        $FlowId = $_REQUEST['FlowId'] ? $_REQUEST['FlowId'] : '';
        $VersionId = $_REQUEST['VersionId'] ? $_REQUEST['VersionId'] : $_REQUEST['paramId'];
        $_REQUEST['ID'] = $CityId = $_REQUEST['CityId'] ? $_REQUEST['CityId'] : $_REQUEST['ID'];
        $FlowNodeId = $_REQUEST['FlowNodeId'] ? $_REQUEST['FlowNodeId'] : '';
        if (empty($FlowId) || empty($VersionId)) exit("<script>alert('请先保存或选择流程信息或流程版本！');self.location=document.referrer;</script>");
        $city = D('flowcity')->where("FLOWID='$FlowId' ")->find();
        if ($city) $_REQUEST['ID'] = $CityId = $city['ID'];
        Vendor('Oms.Form');
        $form = new Form();
        $paramUrl = "&showForm=1&FlowId=$FlowId&VersionId=$VersionId&CityId=$CityId&FlowNodeId=$FlowNodeId";
        $form->FORMFORWARD = U('Flow/FlowNodeSet', $paramUrl);
        $form = $form->initForminfo(58)->setMyFieldVal('FLOWID', $FlowId, true)->getResult();

        $this->assign('form', $form);
        $this->assign('paramUrl', $paramUrl);
        $this->display('newflow3');
    }

    function FlowNodeSet() {
        $FlowId = $_REQUEST['FlowId'] ? $_REQUEST['FlowId'] : '';
        $VersionId = $_REQUEST['VersionId'] ? $_REQUEST['VersionId'] : '';
        $CityId = $_REQUEST['CityId'] ? $_REQUEST['CityId'] : $_REQUEST['paramId'];
        $FlowNodeId = $_REQUEST['FlowNodeId'] ? $_REQUEST['FlowNodeId'] : '';
        if (empty($_REQUEST['ftype'])) $_REQUEST['ID'] = $_REQUEST['ID'] ? $_REQUEST['ID'] : $_REQUEST['FlowNodeId'];
        if (empty($FlowId) || empty($VersionId)) exit("<script>alert('请先保存或选择流程与版本信息！');self.location=document.referrer;</script>");
        if ($_REQUEST['add'] == 1) {
            $_REQUEST['ID'] = null;
        }
        $_REQUEST['search5'] = 'VERSIONID';
        $_REQUEST['search5_s'] = '3';
        $_REQUEST['search5_t'] = $VersionId;
        Vendor('Oms.Form');
        $form = new Form();
        $paramUrl = "&showForm=1&FlowId=$FlowId&VersionId=$VersionId&CityId=$CityId&FlowNodeId=$FlowNodeId";
        if ($_REQUEST['ftype']) $form->FORMFORWARD = U('Flow/FlowNodeSet', $paramUrl . '&ftype=' . $_REQUEST['ftype']);
        else $form->FORMFORWARD = U('Flow/FlowNodeSet', $paramUrl);
        if ($_REQUEST['ftype'] == 'authorize') {
            $auth = D('flownodeauthorize')->where("FLOWNODEID='$FlowNodeId' ")->find();
            if ($auth) $_REQUEST['ID'] = $auth['ID'];
            $form = $form->initForminfo(60)->setMyFieldVal('FLOWNODEID', $FlowNodeId, true)->getResult();
        } elseif ($_REQUEST['ftype'] == 'flownodesubmit') {
            $nodesumit = D('flownodesubmit')->where("BEGINNODE='$FlowNodeId' ")->find();
            if ($nodesumit) $_REQUEST['ID'] = $nodesumit['ID'];
            $lsql = "select ID,NODENAME from FLOWNODE where VERSIONID='$VersionId' ";
            $form = $form->initForminfo(61)->setMyFieldVal('BEGINNODE', $FlowNodeId, true)->setMyField('BEGINNODE', 'LISTSQL', $lsql, false)->setMyField('ENDNODE', 'LISTSQL', $lsql, false)->getResult();
        } else {
            $form = $form->initForminfo(59)->setMyFieldVal('FLOWID', $FlowId, true)->setMyFieldVal('VERSIONID', $VersionId, true)->getResult();
        }

        $this->assign('form', $form);
        $form2 = new Form();
        $form2->GCBTN = '<a id="j-sequence" class="j-showalert" href="javascript:;">排序</a>
			<a id="j-search" class="j-showalert" href="javascript:;">搜索</a>
			<a class="j-refresh" onclick="window.location.reload();" href="javascript:;">刷新</a>
			<a href="' . __SELF__ . '&add=1">新增节点</a>';
        $form2->ADDABLE = 0;
        $form2->CZBTN = '<a class="contrtable-link" onclick="flowNodeAuthorize(this);"  href="javascript:void(0);">页面授权</a><a class="contrtable-link" onclick="flowNodeSubmit(this);"  href="javascript:void(0);">节点提交</a>
			<a class="contrtable-link" onclick="editFlowNode(this);"   href="javascript:void(0);">编辑 </a> <a class="contrtable-link flock" onclick="delFlowNode(this );"   href="javascript:void(0);">删除</a>';
        $form2 = $form2->initForminfo(59)->getGridHtml();
        $this->assign('form2', $form2);
        $this->assign('paramUrl', $paramUrl);
        $this->display('newflow4');
    }

    function FlowNodeAuthorize() {
        $FlowId = $_REQUEST['FlowId'] ? $_REQUEST['FlowId'] : '';
        $VersionId = $_REQUEST['VersionId'] ? $_REQUEST['VersionId'] : '';
        $CityId = $_REQUEST['CityId'] ? $_REQUEST['CityId'] : $_REQUEST['paramId'];
        $FlowNodeId = $_REQUEST['FlowNodeId'] ? $_REQUEST['FlowNodeId'] : '';
        $_REQUEST['ID'] = $_REQUEST['ID'] ? $_REQUEST['ID'] : $_REQUEST['FlowNodeAuthorizeId'];
        if (empty($FlowId) || empty($VersionId)) exit("<script>alert('请先保存或选择流程与版本信息！');self.location=document.referrer;</script>");
        if ($_REQUEST['add'] == 1) {
            $_REQUEST['ID'] = null;
        }
        $_REQUEST['search5'] = 'FlowNodeId';
        $_REQUEST['search5_s'] = '3';
        $_REQUEST['search5_t'] = $FlowNodeId;
        Vendor('Oms.Form');
        $form = new Form();
        $paramUrl = "&showForm=1&FlowId=$FlowId&VersionId=$VersionId&CityId=$CityId&FlowNodeId=$FlowNodeId";
        if ($_REQUEST['ftype']) $form->FORMFORWARD = U('Flow/FlowNodeAuthorize', $paramUrl . '&ftype=' . $_REQUEST['ftype']);
        else $form->FORMFORWARD = U('Flow/FlowNodeAuthorize', $paramUrl);

        //$auth =  D('flownodeauthorize')->where("FLOWNODEID='$FlowNodeId' ")->find();
        //if( $auth  ) $_REQUEST['ID']  = $auth['ID'];
        $flist = D("flowform")->where("VERSIONID='" . $VersionId . "'")->select();
        foreach ($flist as $v) {
            $idarr[] = "" . $v['FORMNO'] . "";
        }
        $ids = implode(',', $idarr);
        $tsql = "select FORMNO,FORMTITLE from FORM where FORMNO in ($ids)";
        $form = $form->initForminfo(60)->setMyFieldVal('FLOWNODEID', $FlowNodeId, true)->setMyField('FORMID', 'LISTSQL', $tsql)->getResult();

        $this->assign('form', $form);
        $form2 = new Form();
        $form2->GCBTN = '<a id="j-sequence" class="j-showalert" href="javascript:;">排序</a>
			<a id="j-search" class="j-showalert" href="javascript:;">搜索</a>
			<a class="j-refresh" onclick="window.location.reload();" href="javascript:;">刷新</a>
			<a href="' . __SELF__ . '&add=1">新增节点授权</a>';
        $form2->ADDABLE = 0;
        //$form2->CZBTN = '
        //<a class="contrtable-link" onclick="editFlowNode(this);"   href="javascript:void(0);">编辑 </a> <a class="contrtable-link flock" onclick="delFlowNode(this );"   href="javascript:void(0);">删除</a>';
        $form2 = $form2->initForminfo(60)->setMyField('FORMID', 'LISTSQL', $tsql)->getGridHtml();
        $this->assign('form2', $form2);
        $this->assign('paramUrl', $paramUrl);
        $this->display('newflow5');

    }

    function FlowNodeSubmit() {
        $FlowId = $_REQUEST['FlowId'] ? $_REQUEST['FlowId'] : '';
        $VersionId = $_REQUEST['VersionId'] ? $_REQUEST['VersionId'] : '';
        $CityId = $_REQUEST['CityId'] ? $_REQUEST['CityId'] : $_REQUEST['paramId'];
        $FlowNodeId = $_REQUEST['FlowNodeId'] ? $_REQUEST['FlowNodeId'] : '';
        $_REQUEST['ID'] = $_REQUEST['ID'] ? $_REQUEST['ID'] : '';
        if (empty($FlowId) || empty($VersionId)) exit("<script>alert('请先保存或选择流程与版本信息！');self.location=document.referrer;</script>");
        if ($_REQUEST['add'] == 1) {
            $_REQUEST['ID'] = null;
        }
        $_REQUEST['search5'] = 'BEGINNODE';
        $_REQUEST['search5_s'] = '3';
        $_REQUEST['search5_t'] = $FlowNodeId;
        Vendor('Oms.Form');
        $form = new Form();
        $paramUrl = "&showForm=1&FlowId=$FlowId&VersionId=$VersionId&CityId=$CityId&FlowNodeId=$FlowNodeId";
        if ($_REQUEST['ftype']) $form->FORMFORWARD = U('Flow/FlowNodeSubmit', $paramUrl . '&ftype=' . $_REQUEST['ftype']);
        else $form->FORMFORWARD = U('Flow/FlowNodeSubmit', $paramUrl);

        $lsql = "select ID,NODENAME from FLOWNODE where VERSIONID='$VersionId' ";
        $form = $form->initForminfo(61)->setMyFieldVal('BEGINNODE', $FlowNodeId, true)->setMyField('BEGINNODE', 'LISTSQL', $lsql, false)->setMyField('ENDNODE', 'LISTSQL', $lsql, false)->getResult();

        $this->assign('form', $form);
        $form2 = new Form();
        $form2->GCBTN = '<a id="j-sequence" class="j-showalert" href="javascript:;">排序</a>
			<a id="j-search" class="j-showalert" href="javascript:;">搜索</a>
			<a class="j-refresh" onclick="window.location.reload();" href="javascript:;">刷新</a>
			<a href="' . __SELF__ . '&add=1">新增节点授权</a>';
        $form2->ADDABLE = 0;
        //$form2->CZBTN = '
        //<a class="contrtable-link" onclick="editFlowNode(this);"   href="javascript:void(0);">编辑 </a> <a class="contrtable-link flock" onclick="delFlowNode(this );"   href="javascript:void(0);">删除</a>';
        $form2 = $form2->initForminfo(61)->setMyField('BEGINNODE', 'LISTSQL', $lsql, false)->setMyField('ENDNODE', 'LISTSQL', $lsql, false)->getGridHtml();
        $this->assign('form2', $form2);
        $this->assign('paramUrl', $paramUrl);
        $this->display('newflow7');

    }

    function FlowVerson() {//流程版本 列表
        Vendor('Oms.Form');
        $form = new Form();
        $form = $form->initForminfo(57)->getResult();
        $this->assign('form', $form);
        $this->display('workflow');
    }

    function FlowForm() {
        $FlowId = $_REQUEST['FlowId'] ? $_REQUEST['FlowId'] : '';
        $VersionId = $_REQUEST['VersionId'] ? $_REQUEST['VersionId'] : '';
        $CityId = $_REQUEST['CityId'] ? $_REQUEST['CityId'] : '';
        $FlowNodeId = $_REQUEST['FlowNodeId'] ? $_REQUEST['FlowNodeId'] : '';
        $_REQUEST['ID'] = $_REQUEST['ID'] ? $_REQUEST['ID'] : '';
        if (empty($FlowId) || empty($VersionId)) exit("<script>alert('请先保存或选择流程与版本信息！');self.location=document.referrer;</script>");
        if ($_REQUEST['add'] == 1) {
            $_REQUEST['ID'] = null;
        }

        $_REQUEST['search5'] = 'VERSIONID';
        $_REQUEST['search5_s'] = '3';
        $_REQUEST['search5_t'] = $VersionId;
        Vendor('Oms.Form');
        $form = new Form();
        $paramUrl = "&showForm=1&FlowId=$FlowId&VersionId=$VersionId&CityId=$CityId&FlowNodeId=$FlowNodeId";
        $form = $form->initForminfo(75)->setMyFieldVal('VERSIONID', $VersionId, true)->getResult();

        $this->assign('form2', $form);
        $this->assign('paramUrl', $paramUrl);
        $this->display('newflow6');
    }

    function Field() {//
        $FlowId = $_REQUEST['FlowId'] ? $_REQUEST['FlowId'] : '';
        $VersionId = $_REQUEST['VersionId'] ? $_REQUEST['VersionId'] : '';
        $CityId = $_REQUEST['CityId'] ? $_REQUEST['CityId'] : '';
        $FlowNodeId = $_REQUEST['FlowNodeId'] ? $_REQUEST['FlowNodeId'] : '';
        $_REQUEST['ID'] = $_REQUEST['ID'] ? $_REQUEST['ID'] : $_REQUEST['FlowNodeAuthorizeId'];
        if (empty($FlowId) || empty($VersionId)) exit("<script>alert('请先保存或选择流程与版本信息！');self.location=document.referrer;</script>");
        if ($_REQUEST['add'] == 1) {
            $_REQUEST['ID'] = null;
        }

        Vendor('Oms.Form');
        $_REQUEST['search5'] = 'FORMNO';
        $_REQUEST['search5_s'] = '3';
        $_REQUEST['search5_t'] = $_REQUEST['FORMID'];
        $form = new Form();
        $form->FORMFORWARD = $_REQUEST['fromurl'];
        $form = $form->initForminfo(62)->setMyFieldVal('FORMNO', $_REQUEST['FORMID'], true)->getResult();
        $this->assign('form', $form);
        $this->display('newflow6');
    }

    function BusinessType() {
        Vendor('Oms.Form');
        $form = new Form();
        //$form->FORMFORWARD = $_REQUEST['fromurl'];
        $form->CZBTN = '<a class="contrtable-link" onclick="editType(this);" href="javascript:;">修改</a>
			|<a class="contrtable-link" onclick="FormList(this);" href="javascript:;"> 流程管理</a> ';
        $form = $form->initForminfo(94)->setMyFieldVal('FORMNO', $_REQUEST['FORMID'], true)->getResult();
        $this->assign('form', $form);
        $this->display('businesstype');
    }

    //工作流
    function workStep() {
        Vendor('Oms.Form');
        $form = new Form();
        $form->CZBTN = '<a class="contrtable-link btn btn-success btn-xs" onclick="viewFlow(this);" href="javascript:;">流程图</a>';
        $form->GCBTN = '<a class="contrtable-link btn btn-danger btn-sm" onclick="handleFlow(this);" href="javascript:;" >办理</a> ';
        $formHtml = $form->initForminfo(139)->where("DEAL_USERID ={$_SESSION['uinfo']['uid']}")->getResult();
        $this->assign('lastFilter', json_encode(g2u($form->lastFilterArr)));  // 保存上次检索的结果
        $this->assign('form', $formHtml);
        $this->display('workStep');
    }

    //办结
    function already() {

        Vendor('Oms.Form');

        $form = new Form();
        $form->orderField = 'E_TIME DESC';
        $form->CZBTN = '<a class="contrtable-link btn btn-success btn-xs" onclick="viewFlow(this);" href="javascript:;"> 流程图</a>';

        /*$form->GCBTN ='<a id="j-sequence" class="j-showalert" href="javascript:;">排序</a>
        <a id="j-search" class="j-showalert" href="javascript:;">搜索</a>
        <a class="j-refresh" onclick="window.location.reload();" href="javascript:;">刷新</a>
        <a href="javascript:;" onclick="viewDetail(this);">查看</a>';*/

        $form->GCBTN = '<a href="javascript:;" class="btn btn-danger btn-sm" onclick="viewDetail(this);">查看</a>';

        $form->orderField = "E_TIME DESC nulls last";
        $form = $form->initForminfo(138)->where("DEAL_USERID ={$_SESSION['uinfo']['uid']}")->getResult();
        $this->assign('form', $form);
        $this->display('already');
    }

    //经办
    function through() {
        Vendor('Oms.Form');

        $form = new Form();
        $form->orderField = 'E_TIME DESC';
        $form->CZBTN = '<a class="contrtable-link btn btn-success btn-xs" onclick="viewFlow(this);" href="javascript:;"> 流程图</a>';

        /*$form->GCBTN ='<a id="j-sequence" class="j-showalert" href="javascript:;">排序</a>
        <a id="j-search" class="j-showalert" href="javascript:;">搜索</a>
        <a class="j-refresh" onclick="window.location.reload();" href="javascript:;">刷新</a><a onclick="viewDetail(this);" href="javascript:void(0);">查看</a>';*/

        $form->GCBTN = '<a class="contrtable-link btn btn-danger btn-sm" onclick="recoverFlow(this);" href="javascript:;" >收回</a><a onclick="viewDetail(this);" class="btn btn-danger btn-sm" href="javascript:void(0);">查看</a>';

        $form->orderField = "E_TIME DESC nulls last";
        $form = $form->initForminfo(140)->where("DEAL_USERID ={$_SESSION['uinfo']['uid']}")->getResult();
        $this->assign('form', $form);
        $this->display('through');
    }

    //办理
    function handleFlow() {
        Vendor('Oms.workflow');
        $workflow = new workflow();

        $ID = $_REQUEST['FLOWID'];
        $record = M('Flows')->find($ID);
        $click = $workflow->nextstep($ID);

        if ($_REQUEST['status'] == 'add') {

            if ($_REQUEST['nextstep']) {

                $deliver = $workflow->handleworkflow($ID, $_REQUEST);
                if ($deliver) {
                    $this->success('保存成功！', U('Flow/workStep'));
                } else {
                    $this->error('保存失败！');
                }
            }

            if ($_REQUEST['finish']) {
                $finish = $workflow->finishworkflow($ID);
                if ($finish) {
                    $this->success('终止成功！');
                } else {
                    $this->error('终止失败！');
                }
            }

        }
        $this->assign('record', $record);
        $this->display('handleFlow');
    }

    //流程图
    function viewFlow() {
        Vendor('Oms.workflow');
        $workflow = new workflow();
        if ($_REQUEST['prjid']) {
            $case = M('Erp_case')->where("PROJECT_ID=" . $_REQUEST['prjid'])->find();
            if ($case['SCALETYPE'] == 4) {
                $flow = M('Erp_flows')->where("flowsetid=19 and CASEID=" . $_REQUEST['prjid'])->find();
            } else {
                $flow = M('Erp_flows')->where("flowsetid=6 and recordid=" . $_REQUEST['prjid'])->find();
            }
            $flowId = $flow['ID'];
        } else {
            $flowId = $_REQUEST['FLOWID'];
        }

        $record = $workflow->chartworkflow($flowId);
        if ($record) {
            /*foreach($record as $key=> &$val){
                $val['DEAL_INFO'] = g2u($val['DEAL_INFO']);
                $val['NAME'] = g2u($val['NAME']);
                $val['FILES'] = g2u($val['FILES']);
            }*/
        }
        //echo json_encode($record);
        //exit;
        $this->assign('list', $record);
        $this->display();
    }

    //删除
    function deleteFlow() {

        Vendor('Oms.workflow');
        $workflow = new workflow();
        $flowId = $_REQUEST['FLOWID'];

        $auth = $workflow->del_authority($flowId);
        if ($auth) {
            $affect = $workflow->deleteworkflow($flowId);
            if ($affect) {
                $this->success('删除成功', U('Flow/workStep'));
            } else {
                $this->error('删除失败');
            }
        } else {
            $this->error('该流程正在进行,暂不能删除');
        }
    }

    // 终止
    function finishFlow() {
        Vendor('Oms.workflow');
        $workflow = new workflow();
        $model = new Model();
        $flowId = $_REQUEST['FLOWID'];

        $sql = "select b.flowtype from erp_flows a left join erp_flownode b on a.flowsetid = b.id ";

        $record = $model->query($sql);
        $flowType = $record[0]['FLOWTYPE'];

        $auth = $workflow->end_authority($flowType);
        if (!$auth) {
            $this->error('暂无权限!请联系管理员');
        }

        $affect = $workflow->finishworkflow($flowId);

        if ($affect) {
            $this->success('终止成功！', U('Flow/through'));
        } else {
            $this->error('终止失败！');
        }
    }

    //委托
    function deliverFlow() {
        Vendor('Oms.workflow');
        $workflow = new workflow();

        $flowId = $_REQUEST['FLOWID'];
        $click = $workflow->nextstep($flowId);

        if ($_REQUEST['status'] == 'add') {

            $deliver = $workflow->deliverworkflow($_REQUEST);
            if ($deliver) {
                if ($_REQUEST['PHONE']) {
                    $msg = "经管系统:你有一条工作流待办";
                    send_sms($msg, $_REQUEST['PHONE'], $_REQUEST['CITY']);

                }

                $subject = "经管系统:工作流待办";
                $content = "你有一条待办的工作流,请及时处理";
                oa_notice($_SESSION['uinfo']['uid'], $_REQUEST['DEAL_USERID'], $subject, $content);

                $this->success('保存成功！', U('Flow/already'));
            } else {
                $this->error('保存失败！');
            }
        }
        $this->assign('flowId', $flowId);
        $this->display('deliverflow');
    }

    //收回
    function recoverFlow() {

        Vendor('Oms.workflow');
        $workflow = new workflow();
        $flowId = $_REQUEST['flowId'];
        $affect = $workflow->recoverFlow($flowId);

        if ($affect) {
            js_alert('成功！', U("Flow/workStep"));
        } else {
            js_alert('失败！');
        }

    }

    //退回流程发起人
    function backFlow() {

        Vendor('Oms.workflow');
        $workflow = new workflow();
        $flowId = $_REQUEST['FLOWID'];

        //print_r($_REQUEST);exit;
        $affect = $workflow->backFlow($flowId);

        if ($affect) {
            $this->success('退回成功', U('Flow/already'));
        } else {
            $this->error('退回失败');
        }
    }

    //下载
    /* function download(){
        $filename = $_GET['filename'];
        $filepath = "./Public/Uploads/".$filename;

        $file = fopen($filepath,"r");

        Header("Content-type:application/octet-stream");
        Header("Accept-Ranges:bytes");
        Header("Accept-Length:".filesize($filepath));
        Header("Content-Disposition:attachment;filename=".$filename);
        echo fread($file,filesize($filepath));
        fclose($file);
     }*/

    //工作流配置
    function workflowSet() {

        Vendor('Oms.Form');
        $form = new Form();

        $form = $form->initForminfo(109);
        $children_data = array(
            array('自由流程', U('Flow/workflowRole')),
            array('固定流程', U('Flow/fixedFlow'))
        );
        $form = $form->setChildren($children_data)->getResult();
        $this->assign('form', $form);
        $this->display('flowset');
    }


    /**
     * +----------------------------------------------------------
     * 流程类型管理
     * +----------------------------------------------------------
     * @param none
    +----------------------------------------------------------
     * @return none
    +----------------------------------------------------------
     */
    public function workflow_type() {
        Vendor('Oms.Form');
        $form = new Form();
        $form->initForminfo(142);
        $form = $form->getResult();
        $this->assign('form', $form);

        $this->display('workflow_type');
    }

    //流程角色
    public function workflowRole() {
        $FLOWSETID = !empty($_GET['parentchooseid']) ? intval($_GET['parentchooseid']) : 0;

        Vendor('Oms.Form');
        $form = new Form();
        $form->initForminfo(160);
        $form->CZBTN = '<a class="contrtable-link btn btn-primary btn-xs" onclick="editRole(this);" href="javascript:;" title="编辑"><i class="glyphicon glyphicon-edit"></i></a><a class="contrtable-link btn btn-danger btn-xs" onclick="delRole(this);" href ="javascript:;" title="删除"><i class="glyphicon glyphicon-trash"></i></a>';

       // $form->GCBTN = '<a href="javascript:;" onclick="addRole();" class="btn btn-info btn-sm">新增</a>';

        $condition = "FLOWSETID = " . $FLOWSETID;
        $form = $form->where($condition)->getResult();

        $this->assign('parentID', $FLOWSETID);
        $this->assign('form', $form);
        $this->display('workflowRole');
    }

    //固定流程
    public function fixedFlow() {
        $FLOWSETID = !empty($_GET['parentchooseid']) ? intval($_GET['parentchooseid']) : 0;

        Vendor('Oms.Form');
        $form = new Form();
        $form->initForminfo(172);
        $form->GABTN .= '<a href="javascript:;" onclick="addFlow(this);" class="btn btn-danger btn-sm"><i class="glyphicon glyphicon-plus"> </i>新增</a>';

        $form->CZBTN = '<a class="contrtable-link btn btn-primary btn-xs" onclick="editFlow(this);" href="javascript:;" title="编辑"><i class="glyphicon glyphicon-edit"></i></a><a class="contrtable-link btn btn-danger btn-xs" onclick="delFlow(this);" href="javascript:;" title="删除"><i class="glyphicon glyphicon-trash"></i></a>';

        $condition = "FLOWSETID = " . $FLOWSETID;
        $form = $form->where($condition)->getResult();

        $this->assign('parentId', $FLOWSETID);
        $this->assign('form', $form);
        $this->display('fixedFlow');
    }

    public function addFixedFlow() {
        $parentID = $_REQUEST['parentID'];
        if ($_REQUEST['add']) {
            $data = array();
            $data['FLOWSETID'] = $_REQUEST['FLOWSETID'];
            $data['CITY'] = $_REQUEST['CITY'];
            $data['FLOWCURRENT'] = $_REQUEST['FLOWCURRENT'];

            $add = M('Erp_fixedflow')->add($data);
            if ($add) {
                js_alert('保存成功！', U('Flow/fixedFlow', array("parentchooseid" => $parentID)));
            } else {
                js_alert('保存失败！');
            }
        }

        $device = M('Erp_flowset')->field("id,flowname")->where("id={$parentID}")->select();
        $city = M('Erp_city')->field("id,name")->where("isvalid = -1")->select();

        $this->assign('parentID', $parentID);
        $this->assign('city', $city);
        $this->assign('device', $device);
        $this->display('addFixedFlow');
    }

    public function editFixedFlow() {
        $parentID = $_REQUEST['parentID'];

        if ($_REQUEST['edit']) {
            $data = array();
            $data['FLOWSETID'] = $_REQUEST['FLOWSETID'];
            $data['CITY'] = $_REQUEST['CITY'];
            $data['FLOWCURRENT'] = $_REQUEST['FLOWCURRENT'];
            $Id = $_REQUEST['ID'];

            $update = M('Erp_fixedflow')->where("id = {$Id}")->save($data);
            if ($update) {
                js_alert('编辑成功！', U('Flow/fixedFlow', array('parentchooseid' => $parentID)));
            } else {
                js_alert('编辑成功！');
            }
        }
        $ID = $_REQUEST['FLOWID'];
        $list = M('Erp_fixedflow')->where("id = {$ID}")->find();

        $device = M('Erp_flowset')->field("id,flowname")->where("id={$parentID}")->select();
        $city = M('Erp_city')->field("id,name")->where("isvalid = -1")->select();
        $roleList = M("Erp_group")->field("loan_groupid as ID,loan_groupname as ROLENAME")->select();

        $this->assign('parentID', $parentID);
        $this->assign('city', $city);
        $this->assign('list', $list);
        $this->assign('roles', $roleList);
        $this->assign('device', $device);
        $this->display('editFixedFlow');
    }

    public function delFixedFlow() {
        $ID = $_REQUEST['FLOWID'];
        $del = M('Erp_fixedflow')->where("id = {$ID}")->delete();

        if ($del) {
            js_alert('删除成功！', U('Flow/fixedFlow'));
        } else {
            js_alert('删除失败！', U('Flow/fixedFlow'));
        }
    }

    //流程角色编辑新增
    public function handleRole() {
        $parentID = $_REQUEST["parentID"];

        if ($_REQUEST['save']) {

            $result = array();
            $data['FLOWEND'] =
                $_REQUEST['FLOWEND'] ? implode($_REQUEST['FLOWEND'], ',') : '';
            $data['FLOWSTART'] = $_REQUEST['FLOWSTART'] ? implode($_REQUEST['FLOWSTART'], ',') : '';
            $data['FLOWNOT'] =
                $_REQUEST['FLOWNOT'] ? implode($_REQUEST['FLOWNOT'], ',') : '';
            $data['FLOWPASS'] =
                $_REQUEST['FLOWPASS'] ? implode($_REQUEST['FLOWPASS'], ',') : '';
            $data['FLOWTHROUGH'] = $_REQUEST['FLOWTHROUGH'] ? implode($_REQUEST['FLOWTHROUGH'], ',') : '';

            $data['FLOWSETID'] = $_REQUEST['FLOWSETID'] ? $_REQUEST['FLOWSETID'] : '';
            $data['SIGN'] = $_REQUEST['SIGN'] ? $_REQUEST['SIGN'] : '';
            $data['VALUE'] = $_REQUEST['VALUE'] ? $_REQUEST['VALUE'] : '';
            $ID = $_REQUEST['ID'];

            if ($ID) {
                $update = M('Erp_flowrole')->where("id=" . $ID)->save($data);

                if ($update) {
                    $result = array('data' => 1, 'msg' => g2u('成功'));
                } else {
                    $result = array('data' => 0, 'msg' => g2u('失败'));
                }
            } else {
                $add = M('Erp_flowrole')->add($data);

                if ($add) {
                    $result = array('data' => 1, 'msg' => g2u('成功'));
                } else {
                    $result = array('data' => 0, 'msg' => g2u('失败'));
                }
            }

            echo json_encode($result);
            exit;
        }

        $operate = $_REQUEST['operate'];
        $flowsetList = M('Erp_flowset')->field("ID,FLOWNAME")->where("id={$parentID}")->select();
        $flowroleList = M('Erp_group')->field("LOAN_GROUPID,LOAN_GROUPNAME")->select();

        if ($operate == 'edit') {

            $ID = $_REQUEST['ID'];

            $list = M('Erp_flowrole')->where("ID={$ID}")->find();

            $this->assign('list', $list);
            $this->assign('roleId', $ID);
        }

        $this->assign('parentID', $parentID);
        $this->assign('flowsetList', $flowsetList);
        $this->assign('flowroleList', $flowroleList);
        $this->display('handleRole');
    }

    //工作流分组
    function groupFlow(){
        Vendor('Oms.Form');
        $form = new Form();

        $form = $form->initForminfo(215);
        $form->CZBTN = '<a class="contrtable-link btn btn-primary btn-xs" onclick="editRole(this);" href="javascript:;" title="编辑"><i class="glyphicon glyphicon-edit"></i></a><a class="contrtable-link btn btn-danger btn-xs" onclick="delRole(this);" href ="javascript:;" title="删除"><i class="glyphicon glyphicon-trash"></i></a>';
        $myself = $_SESSION['uinfo']['uid'];
        $condition =  "USERID = " .$myself;
        $form = $form   ->where($condition)->getResult();
        $this->assign('form', $form);
        $this->display('groupFlow');
    }


    //工作流分组角色添加编辑删除
    public function handleGroupRole() {

        if ($_REQUEST['save']) {

            $result = array();

            $data['GROUPNAME'] = u2g($_REQUEST['GROUPNAME']) ? u2g($_REQUEST['GROUPNAME']) : '';
            $data['GROUPUSERID'] = $_REQUEST['GROUPUSERID'] ? $_REQUEST['GROUPUSERID'] : '';
            //判断重复，去除重复
            $groupArr = array_unique(explode(',',$data['GROUPUSERID']));
            $data['GROUPUSERID'] = implode(',',$groupArr);
            $data['USERID'] = $_SESSION['uinfo']['uid'];
            $ID = $_REQUEST['ID'];

            if($data['GROUPNAME'] == "" or $data['GROUPUSERID'] == ""){
                $result = array('data' => 0, 'msg' => g2u('亲，分组名称和组类成员为必填项'));
                echo json_encode($result);
                exit;
            }
            if ($ID) {
                $update = M('Erp_group_flow')->where("id=" . $ID)->save($data);

                if ($update) {
                    $result = array('data' => 1, 'msg' => g2u('成功'));
                } else {
                    $result = array('data' => 0, 'msg' => g2u('失败'));
                }
            } else {
                //分组名称不能重复
                $groupNames = D()->query( "select groupname from erp_group_flow where userid = ".$data['USERID']);
                foreach($groupNames as $groupName){
                    if(u2g($_REQUEST['GROUPNAME']) == $groupName['GROUPNAME']){
                        $result = array('data' => 0, 'msg' => g2u('亲，分组名称已存在，请更换'));
                        echo json_encode($result);
                        exit;
                    }
                }
                $add = M('Erp_group_flow')->add($data);

                if ($add) {
                    $result = array('data' => 1, 'msg' => g2u('成功'));
                } else {
                    $result = array('data' => 0, 'msg' => g2u('失败'));
                }
            }

            echo json_encode($result);
            exit;
        }

        $operate = $_REQUEST['operate'];
        $flowroleList = D()->query("select a.id,a.name,a.username,b.deptname,c.py as city from erp_users a
					 left join erp_dept b on a.deptid = b.id
					 left join erp_city c on a.city = c.id
					  where  a.isvalid = -1   and c.isvalid = -1 ");
        if ($operate == 'edit') {

            $ID = $_REQUEST['ID'];

            $list = M('Erp_group_flow')->where("ID={$ID}")->find();

            $this->assign('list', $list);
            $this->assign('roleId', $ID);
        }

        $this->assign('flowroleList', $flowroleList);
        $this->display('handleGroupRole');
    }

    //编辑按钮，获取成员名称
    public function ajax_get_groupname(){
        if($_REQUEST['edit'] == 1){
            $ID = $_REQUEST['ID'] ? $_REQUEST['ID'] : '';
            if($ID){
                $groupList = M('Erp_group_flow')->where("ID={$ID}")->find();
                $groupListArr = explode(',',$groupList['GROUPUSERID']);
                foreach($groupListArr as $key => $groupId){
                    $groupName = M("Erp_users")->where("ID={$groupId}")->getField('NAME');
                    $groupNameList[$key]['ID'] = $groupId;
                    $groupNameList[$key]['NAME'] = $groupName;
                }
            }
            echo json_encode(g2u($groupNameList));
            exit;

        }

    }
}

?>